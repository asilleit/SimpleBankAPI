
@page "/create-account"
@using Blazor.Data.Models
@using Blazor.Data.Services
@using Blazor.Data.Services.Base
@using Blazor.Data.Services.Interfaces
@using Microsoft.Extensions.Logging
@using Blazor.Data.Services.Interfaces
@inject IAccountsService _accountService;
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage;
@inject IUsersService _usersService
@inject ProtectedLocalStorage _localStorage
<div class="row">
    <div class="col-5 shadow-lg p-5 border m-2 border-opacity-25 bg-light bg-gradient">
        <h2 class="text-center mb-3">Create Account</h2>
        <EditForm Model="@accountRequest" OnSubmit="@SubmitForm">
            <p>
            <div class="input-group mb-3">
                <span class="input-group-text" id="basic-addon1">Currency</span>
                <input type="text" @bind="accountRequest.Currency">
            </div>
            </p>
            <p>
            <div class="input-group mb-3">
                <span class="input-group-text" id="basic-addon1">Amount</span>
                <input placeholder="0" type="number" @bind="accountRequest.Amount">
            </div>
            </p>
            <p>
                <button class="btn btn-outline-dark" type="submit">Create Account</button>
                <button class="btn btn-outline-dark">Cancel</button>
            </p>
        </EditForm>
    </div>
</div>

@code {

    string[] currencys = new string[] { "EUR", "DOL" };
    private Data.Models.CreateAccount accountRequest = new();

    private string OperationStatus = "";
    private async Task OnCancelClick()
    {
        Console.WriteLine("My debug cancel.");
    }

    private async Task SubmitForm()
    {
        var response = await _accountService.PostAccountAsync(accountRequest);

        Console.WriteLine(response.Item1);
        Console.WriteLine(response.Item2);
        Console.WriteLine(accountRequest.Amount);
        Console.WriteLine(accountRequest.Currency);

        StateHasChanged();
    }
}