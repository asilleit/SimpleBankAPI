@attribute [Authorize]
@using Blazor.Data.Services
@using Blazor.Data.Services.Base
@using Blazor.Data.Services.Interfaces
@inject NavigationManager _navigationManager
@inject IAccountsService _accountService
@inject ITransfersService _transfersService

@page "/account/{id:int}"

<div class="row mb-2">
    <div class="col-8"></div>
    <div class="col-2">
        <button class="btn btn-sm btn-outline-info" @onclick="RedirectToAccounts">Back</button>
    </div>
</div>
<div class="row">
    @if (account != null)
    {
        <h3>Account</h3>
        <table class="table w-25">
            <tr>
                <td scope="row">Account nr.</td>
                <td>@account.Id</td>
            </tr>
            <tr>
                <td>Currency</td>
                <td>@account.Currency</td>
            </tr>
            <tr>
                <td>Balance</td>
                <td>@account.Balance</td>
            </tr>

        </table>
    }
</div>

<div class="row">
    @if (account != null)
    {
        <h3>Account</h3>
        <table class="table w-25">
            <tr>
                <td scope="row">Account nr.</td>
                <td>@account.Id</td>
            </tr>
            <tr>
                <td>Currency</td>
                <td>@account.Currency</td>
            </tr>
            <tr>
                <td>Balance</td>
                <td>@account.Balance</td>
            </tr>

        </table>
    }
</div>

@code {

    [Parameter]

    public int id { get; set; }

    [CascadingParameter]

    public EventCallback SessionStatusEvent { get; set; }
    private AccountResponse? account;
    protected override async Task OnInitializedAsync()
    {
        var result = await _accountService.GetAccountDetails(id);
        if (result.Item3 == "token expired")
        {
            await SessionStatusEvent.InvokeAsync();
            return;
        }

        if (!result.Item1)
            return;
        account = result.Item2;

        StateHasChanged();
    }

    protected void RedirectToAccounts()
    {
        _navigationManager.NavigateTo("/Accounts");
    }
}
