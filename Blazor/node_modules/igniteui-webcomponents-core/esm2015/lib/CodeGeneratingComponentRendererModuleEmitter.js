/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, typeCast, markType } from "./type";
import { CodeGeneratingCodeWriter } from "./CodeGeneratingCodeWriter";
import { CodeGeneratingImportManager } from "./CodeGeneratingImportManager";
import { JsonDictionaryArray } from "./JsonDictionaryArray";
import { JsonDictionaryValue } from "./JsonDictionaryValue";
import { stringStartsWith, stringReplace } from "./string";
/**
 * @hidden
 */
export let CodeGeneratingComponentRendererModuleEmitter = /*@__PURE__*/ (() => {
    class CodeGeneratingComponentRendererModuleEmitter extends Base {
        constructor(a, b) {
            super();
            this.k = null;
            this.i = null;
            this.b = null;
            this.f = new CodeGeneratingImportManager();
            this.e = new CodeGeneratingImportManager();
            this.a = null;
            this.k = a;
            this.i = b;
            this.b = new CodeGeneratingCodeWriter(this.k);
            this.a = new CodeGeneratingCodeWriter(this.k);
        }
        get j() {
            return this.i;
        }
        get d() {
            return this.b;
        }
        get h() {
            return this.f;
        }
        get g() {
            return this.e;
        }
        get c() {
            return this.a;
        }
        n(a, b) {
            this.p();
            if (typeCast(JsonDictionaryArray.$, a) !== null) {
                let c = a;
                for (let d = 0; d < c.items.length; d++) {
                    let e = c.items[d];
                    if (typeCast(JsonDictionaryValue.$, e) !== null) {
                        let f = e;
                        if (f != null) {
                            let g = f.value.toString();
                            g = this.l(g, b);
                            this.m(g);
                        }
                    }
                }
            }
            this.o();
            this.i.addImportResult("modulesImports", this.h);
            this.i.addContainerResult("modulesRegister", this.d.toString());
            this.i.addImportResult("descriptionImports", this.g);
            this.i.addContainerResult("descriptionRegister", this.c.toString());
        }
        l(a, b) {
            if (a == "withDescriptions") {
                return a;
            }
            let c = "";
            let d = a.split('/');
            if (d.length == 1) {
                c = d[0];
                return c;
            }
            else {
                let e = d[0];
                c = d[1];
                if (stringStartsWith(c, "Web") && b.getMetadata(stringReplace(c, "Module", ""), "__qualifiedNameTS") != null) {
                    c = c.substr(3);
                    this.j.addPackageRef("web" + e);
                }
                return e + "/" + c;
            }
        }
        o() {
        }
        m(a) {
        }
        p() {
        }
    }
    CodeGeneratingComponentRendererModuleEmitter.$t = /*@__PURE__*/ markType(CodeGeneratingComponentRendererModuleEmitter, 'CodeGeneratingComponentRendererModuleEmitter');
    return CodeGeneratingComponentRendererModuleEmitter;
})();
