import { Description } from "./Description";
import { WebGroupByRecordDescription } from "./WebGroupByRecordDescription";
import { Type } from "./type";
import { WebGridValidationStateDescription } from "./WebGridValidationStateDescription";
import { WebCellTypeDescription } from "./WebCellTypeDescription";
import { WebTreeGridRecordDescription } from "./WebTreeGridRecordDescription";
import { WebGridBaseDirectiveDescription } from "./WebGridBaseDirectiveDescription";
/**
 * @hidden
 */
export declare class WebRowTypeDescription extends Description {
    static $t: Type;
    protected get_type(): string;
    readonly type: string;
    private static __marshalByValue;
    private static __marshalByValueAlias;
    constructor();
    private aq;
    index: number;
    private ar;
    viewIndex: number;
    private ab;
    isGroupByRow: boolean;
    private ac;
    isSummaryRow: boolean;
    private n;
    groupRow: WebGroupByRecordDescription;
    private av;
    key: any;
    private l;
    validation: WebGridValidationStateDescription;
    private au;
    data: any;
    private f;
    cells: WebCellTypeDescription[];
    private w;
    disabled: boolean;
    private ad;
    pinned: boolean;
    private ae;
    selected: boolean;
    private x;
    expanded: boolean;
    private v;
    deleted: boolean;
    private aa;
    inEditMode: boolean;
    private g;
    children: WebRowTypeDescription[];
    private p;
    rowParent: WebRowTypeDescription;
    private z;
    hasChildren: boolean;
    private r;
    treeRow: WebTreeGridRecordDescription;
    private u;
    addRowUI: boolean;
    private y;
    focused: boolean;
    private j;
    grid: WebGridBaseDirectiveDescription;
}
