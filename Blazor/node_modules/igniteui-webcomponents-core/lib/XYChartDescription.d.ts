import { DomainChartDescription } from "./DomainChartDescription";
import { FormatSpecifierDescription } from "./FormatSpecifierDescription";
import { Type } from "./type";
/**
 * @hidden
 */
export declare abstract class XYChartDescription extends DomainChartDescription {
    static $t: Type;
    protected get_type(): string;
    constructor();
    private qz;
    xAxisFormatLabelRef: string;
    private rh;
    yAxisFormatLabelRef: string;
    private o4;
    xAxisLabelLeftMargin: number;
    private o6;
    xAxisLabelTopMargin: number;
    private o5;
    xAxisLabelRightMargin: number;
    private o3;
    xAxisLabelBottomMargin: number;
    private pl;
    yAxisLabelLeftMargin: number;
    private pn;
    yAxisLabelTopMargin: number;
    private pm;
    yAxisLabelRightMargin: number;
    private pk;
    yAxisLabelBottomMargin: number;
    private q4;
    xAxisLabelTextColor: string;
    private rm;
    yAxisLabelTextColor: string;
    private qx;
    actualXAxisLabelTextColor: string;
    private qy;
    actualYAxisLabelTextColor: string;
    private pf;
    xAxisTitleMargin: number;
    private pw;
    yAxisTitleMargin: number;
    private pe;
    xAxisTitleLeftMargin: number;
    private pv;
    yAxisTitleLeftMargin: number;
    private ph;
    xAxisTitleTopMargin: number;
    private py;
    yAxisTitleTopMargin: number;
    private pg;
    xAxisTitleRightMargin: number;
    private px;
    yAxisTitleRightMargin: number;
    private pd;
    xAxisTitleBottomMargin: number;
    private pu;
    yAxisTitleBottomMargin: number;
    private rf;
    xAxisTitleTextColor: string;
    private rx;
    yAxisTitleTextColor: string;
    private q5;
    xAxisLabelTextStyle: string;
    private rn;
    yAxisLabelTextStyle: string;
    private rg;
    xAxisTitleTextStyle: string;
    private ry;
    yAxisTitleTextStyle: string;
    private q3;
    xAxisLabelRef: string;
    private rl;
    yAxisLabelRef: string;
    private q8;
    xAxisMajorStroke: string;
    private rq;
    yAxisMajorStroke: string;
    private o7;
    xAxisMajorStrokeThickness: number;
    private po;
    yAxisMajorStrokeThickness: number;
    private o8;
    xAxisMinorStrokeThickness: number;
    private pp;
    yAxisMinorStrokeThickness: number;
    private ra;
    xAxisStrip: string;
    private rs;
    yAxisStrip: string;
    private rb;
    xAxisStroke: string;
    private rt;
    yAxisStroke: string;
    private o9;
    xAxisStrokeThickness: number;
    private pq;
    yAxisStrokeThickness: number;
    private pa;
    xAxisTickLength: number;
    private pr;
    yAxisTickLength: number;
    private rc;
    xAxisTickStroke: string;
    private ru;
    yAxisTickStroke: string;
    private pb;
    xAxisTickStrokeThickness: number;
    private ps;
    yAxisTickStrokeThickness: number;
    private rd;
    xAxisTitle: string;
    private rv;
    yAxisTitle: string;
    private q9;
    xAxisMinorStroke: string;
    private rr;
    yAxisMinorStroke: string;
    private o2;
    xAxisLabelAngle: number;
    private pj;
    yAxisLabelAngle: number;
    private o1;
    xAxisExtent: number;
    private pi;
    yAxisExtent: number;
    private pc;
    xAxisTitleAngle: number;
    private pt;
    yAxisTitleAngle: number;
    private ox;
    xAxisInverted: boolean;
    private oy;
    yAxisInverted: boolean;
    private re;
    xAxisTitleAlignment: string;
    private rw;
    yAxisTitleAlignment: string;
    private q1;
    xAxisLabelHorizontalAlignment: string;
    private rj;
    yAxisLabelHorizontalAlignment: string;
    private q6;
    xAxisLabelVerticalAlignment: string;
    private ro;
    yAxisLabelVerticalAlignment: string;
    private q7;
    xAxisLabelVisibility: string;
    private rp;
    yAxisLabelVisibility: string;
    private rk;
    yAxisLabelLocation: string;
    private q2;
    xAxisLabelLocation: string;
    private q0;
    xAxisLabelFormat: string;
    private ot;
    xAxisLabelFormatSpecifiers: FormatSpecifierDescription[];
    private ri;
    yAxisLabelFormat: string;
    private ou;
    yAxisLabelFormatSpecifiers: FormatSpecifierDescription[];
}
