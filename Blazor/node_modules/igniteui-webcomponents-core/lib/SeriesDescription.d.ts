import { Description } from "./Description";
import { Type } from "./type";
/**
 * @hidden
 */
export declare abstract class SeriesDescription extends Description {
    static $t: Type;
    protected get_type(): string;
    readonly type: string;
    constructor();
    private bq;
    dataSourceRef: string;
    private by;
    legendRef: string;
    private bx;
    legendItemVisibility: string;
    private bv;
    legendItemBadgeTemplateRef: string;
    private bm;
    actualLegendItemBadgeTemplateRef: string;
    private bl;
    actualLegendItemBadgeOutline: string;
    private bk;
    actualLegendItemBadgeBrush: string;
    private bu;
    legendItemBadgeShape: string;
    private bt;
    legendItemBadgeMode: string;
    private bw;
    legendItemTemplateRef: string;
    private br;
    discreteLegendItemTemplateRef: string;
    private b5;
    transitionEasingFunctionRef: string;
    private b6;
    transitionInEasingFunctionRef: string;
    private bd;
    transitionDuration: number;
    private ac;
    actualResolution: number;
    private ak;
    resolution: number;
    private as;
    visibleRangeMarginTop: number;
    private ap;
    visibleRangeMarginBottom: number;
    private aq;
    visibleRangeMarginLeft: number;
    private ar;
    visibleRangeMarginRight: number;
    private bo;
    brush: string;
    private bh;
    actualBrush: string;
    private bz;
    outline: string;
    private bn;
    actualOutline: string;
    private ao;
    thickness: number;
    private ad;
    actualThickness: number;
    private bi;
    actualHighlightingMode: string;
    private aa;
    actualHighlightingFadeOpacity: number;
    private ag;
    highlightingFadeOpacity: number;
    private g;
    isActualLegendFinancial: boolean;
    private h;
    isComponentHighlightingModeIgnored: boolean;
    private k;
    isHighlightingEnabled: boolean;
    private m;
    shouldHideAutoCallouts: boolean;
    private j;
    isDropShadowEnabled: boolean;
    private al;
    shadowBlur: number;
    private b2;
    shadowColor: string;
    private o;
    useSingleShadow: boolean;
    private am;
    shadowOffsetX: number;
    private an;
    shadowOffsetY: number;
    private ae;
    areaFillOpacity: number;
    private z;
    actualAreaFillOpacity: number;
    private ah;
    markerFillOpacity: number;
    private ab;
    actualMarkerFillOpacity: number;
    private i;
    isDefaultToolTipSelected: boolean;
    private n;
    showDefaultTooltip: boolean;
    private b9;
    visibleRangeMode: string;
    private b0;
    outlineMode: string;
    private be;
    transitionInDuration: number;
    private b7;
    transitionInSpeedType: string;
    private l;
    mouseOverEnabled: boolean;
    private bp;
    coercionMethodsRef: string;
    private f;
    expectFunctions: boolean;
    private bs;
    hitTestMode: string;
    private bj;
    actualHitTestMode: string;
    private af;
    finalValue: number;
    private aj;
    percentChange: number;
    private ai;
    opacity: number;
    private b8;
    visibility: string;
    private b1;
    renderRequestedRef: string;
    private b4;
    tooltipTemplateRef: string;
    private b3;
    title: string;
}
