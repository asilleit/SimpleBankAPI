import { AxisDescription } from "./AxisDescription";
import { FormatSpecifierDescription } from "./FormatSpecifierDescription";
import { Type } from "./type";
/**
 * @hidden
 */
export declare abstract class NumericAxisBaseDescription extends AxisDescription {
    static $t: Type;
    protected get_type(): string;
    constructor();
    private ei;
    autoRangeBufferMode: string;
    private dx;
    minimumValue: number;
    private dr;
    actualMinimumValue: number;
    private du;
    actualVisibleMinimumValue: number;
    private dw;
    maximumValue: number;
    private dq;
    actualMaximumValue: number;
    private dt;
    actualVisibleMaximumValue: number;
    private dv;
    interval: number;
    private dp;
    actualInterval: number;
    private dy;
    minorInterval: number;
    private ds;
    actualMinorInterval: number;
    private dz;
    referenceValue: number;
    private di;
    isLogarithmic: boolean;
    private df;
    actualIsLogarithmic: boolean;
    private dg;
    favorLabellingScaleEnd: boolean;
    private eb;
    logarithmBase: number;
    private ej;
    formatAbbreviatedLabelRef: string;
    private ed;
    abbreviatedLabelFormat: string;
    private dc;
    abbreviatedLabelFormatSpecifiers: FormatSpecifierDescription[];
    private dh;
    isFormattingAbbreviatedLargeNumber: boolean;
    private de;
    abbreviateLargeNumbers: boolean;
    private eg;
    actualMinimumValueChangeRef: string;
    private ef;
    actualMaximumValueChangeRef: string;
    private ee;
    actualIntervalChangeRef: string;
    private eh;
    actualMinorIntervalChangeRef: string;
}
