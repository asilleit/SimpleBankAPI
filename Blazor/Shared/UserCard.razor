@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using Blazor.Data.Services
@using Blazor.Data.Services.Interfaces
@inject ProtectedLocalStorage _localStorage
@inject NavigationManager navigationManager
@inject IUsersService usersService

<div class="row bg-white py-3 rounded-pill">
    <div class="col-5">
        <img src="/Images/imagemUser.png"class="w-100" alt="..." >
    </div>
    @* <div class="col-7 d-flex justify-content-center">
        <div>
            <h5 class="card-title">@userLoggedIn</h5>
            <button class="btn btn-sm btn-primary" >Logout</button>
        </div>
    </div> *@
</div>

@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    private string userLoggedIn { get; set; }

    protected override async Task OnInitializedAsync()
    {
        @* var authState = await authenticationStateTask;
        if (authState.User.Identity.IsAuthenticated)
            userLoggedIn = authState.User.Identity.Name!;
        StateHasChanged(); *@
    }

}
